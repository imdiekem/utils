{"ast":null,"code":"var _jsxFileName = \"/Users/mimdieke/GHRepos/utils/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { match } from \"./utils\";\nimport { StyledUtilDescription } from \"./components/UI\";\nimport WebFont from \"webfontloader\";\nimport \"./styles.css\";\nWebFont.load({\n  google: {\n    families: [\"Nunito:400,700\", \"Literata:400,600\", \"Monoton\", \"sans-serif\"]\n  }\n});\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(StyledUtilDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"match: \"), \"This number is output using a \\\"match\\\" function - a functional alternative to the \\\"if / else\\\" nightmare and the switch statement.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://codeburst.io/alternative-to-javascripts-switch-statement-with-a-functional-twist-3f572787ba1c\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"codeburst\")), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, match(10).on(function (x) {\n    return x < 40;\n  }, function (x) {\n    return x * 20;\n  }).otherwise(function (x) {\n    return x * 10;\n  }))));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/mimdieke/GHRepos/utils/src/index.js"],"names":["React","ReactDOM","match","StyledUtilDescription","WebFont","load","google","families","App","on","x","otherwise","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,KAAT,QAAsB,SAAtB;AAEA,SAASC,qBAAT,QAAsC,iBAAtC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,cAAP;AAEAA,OAAO,CAACC,IAAR,CAAa;AACXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAAC,gBAAD,EAAmB,kBAAnB,EAAuC,SAAvC,EAAkD,YAAlD;AADJ;AADG,CAAb;;AAMA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,yIADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,uGAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAAC,EAAD,CAAL,CACEO,EADF,CACK,UAAAC,CAAC;AAAA,WAAIA,CAAC,GAAG,EAAR;AAAA,GADN,EACkB,UAAAA,CAAC;AAAA,WAAIA,CAAC,GAAG,EAAR;AAAA,GADnB,EAEEC,SAFF,CAEY,UAAAD,CAAC;AAAA,WAAIA,CAAC,GAAG,EAAR;AAAA,GAFb,CADH,CAXF,CADF,CADF;AAqBD;;AAED,IAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAb,QAAQ,CAACc,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { match } from \"./utils\";\n\nimport { StyledUtilDescription } from \"./components/UI\";\n\nimport WebFont from \"webfontloader\";\n\nimport \"./styles.css\";\n\nWebFont.load({\n  google: {\n    families: [\"Nunito:400,700\", \"Literata:400,600\", \"Monoton\", \"sans-serif\"]\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StyledUtilDescription>\n        <p>\n          <strong>match: </strong>\n          This number is output using a \"match\" function - a functional\n          alternative to the \"if / else\" nightmare and the switch statement.\n        </p>\n        <p>\n          <a href=\"https://codeburst.io/alternative-to-javascripts-switch-statement-with-a-functional-twist-3f572787ba1c\">\n            codeburst\n          </a>\n        </p>\n        <strong>\n          {match(10)\n            .on(x => x < 40, x => x * 20)\n            .otherwise(x => x * 10)}\n        </strong>\n      </StyledUtilDescription>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}